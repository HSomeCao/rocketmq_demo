<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans      
                        http://www.springframework.org/schema/beans/spring-beans.xsd      
                        http://www.springframework.org/schema/context      
                        http://www.springframework.org/schema/context/spring-context.xsd      
                        http://www.springframework.org/schema/mvc      
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
       					http://dubbo.apache.org/schema/dubbo 
       					http://dubbo.apache.org/schema/dubbo/dubbo.xsd">    
                            
    
              
     <!-- 添加注解驱动 -->      
    <mvc:annotation-driven />    
    <mvc:default-servlet-handler/>    
        
<!--     设置使用注解的类所在的包    --> 
    <context:component-scan base-package="com.bank.controller" />    
        <!-- 自动扫描 -->    
    <context:component-scan base-package="com.bank.*" />    

    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                 <ref bean="stringHttpMessageConverter" />  
                <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                </bean>
            </list>
        </property>
    </bean>

    <bean id="stringHttpMessageConverter"
        class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
       
        
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">    
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->    
        <property name="prefix" value="/WEB-INF/jsp/" />    
        <property name="suffix" value=".jsp" />    
    </bean>    
        
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器-->    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">      
        <!-- 默认编码 -->    
        <property name="defaultEncoding" value="utf-8" />      
        <!-- 文件大小最大值 -->    
        <property name="maxUploadSize" value="10485760000" />      
        <!-- 内存中的最大值 -->    
        <property name="maxInMemorySize" value="40960" />      
    </bean>     
    
<!--     dubbo__start -->
    
    <dubbo:application name="cus-t">
    <dubbo:parameter key="qos.enable" value="true"/>
    <dubbo:parameter key="qos.accept.foreign.ip" value="true"/>
    <dubbo:parameter key="qos.port" value="33333"/>
    </dubbo:application>
     
    <dubbo:protocol port="21880"/>
    
    <!-- 注册 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" dynamic="true"/>
    <dubbo:config-center address="zookeeper://127.0.0.1:2181"/>
<!--<dubbo:metadata-report address="zookeeper://127.0.0.1:2181"/> -->

<!--service implementation, as same as regular local bean -->
<!--<bean id="DepositService" class="com.bank.service.impl.DepositServiceImpl"/>-->
 	<dubbo:annotation package="com.bank.service"/>
 	<dubbo:annotation package="com.bank.controller"/>
 	
 
    <!-- 暴露接口 -->
    <dubbo:service interface="com.bank.service.CardService" ref="cardServiceImpl" dynamic="true"/>
    <dubbo:service interface="com.bank.service.CustomerService" ref="customerServiceImpl" dynamic="true"/>
    
    <!--引用接口 -->
    <dubbo:reference id="depositService" check="false" interface="com.bank.service.DepositService"/>
 <!--     dubbo__end -->
    
</beans>    
